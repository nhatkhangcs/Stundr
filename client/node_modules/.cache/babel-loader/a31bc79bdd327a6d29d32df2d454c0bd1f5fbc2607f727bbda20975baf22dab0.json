{"ast":null,"code":"var _jsxFileName = \"/Users/khangnguyen/lab/tinder-clone/client/src/components/ChatDisplay.js\";\nimport Chat from './Chat';\nimport ChatInput from './ChatInput';\nimport axios from 'axios';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatDisplay = _ref => {\n  let {\n    user,\n    clickedUser\n  } = _ref;\n  const getUserMessages = async () => {\n    const response = await axios.get('http://localhost:8000/messages', {\n      params: {\n        userId: userId,\n        correspondingUserId: clickedUserId\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_c = ChatDisplay;\nexport default ChatDisplay;\nvar _c;\n$RefreshReg$(_c, \"ChatDisplay\");","map":{"version":3,"names":["Chat","ChatInput","axios","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatDisplay","_ref","user","clickedUser","getUserMessages","response","get","params","userId","correspondingUserId","clickedUserId","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/khangnguyen/lab/tinder-clone/client/src/components/ChatDisplay.js"],"sourcesContent":["import Chat from './Chat'\nimport ChatInput from './ChatInput'\nimport axios from 'axios'\nimport {useState, useEffect} from \"react\"\n\n\nconst ChatDisplay = ({ user, clickedUser }) => {\n    const getUserMessages = async () => {\n        const response = await axios.get('http://localhost:8000/messages', {\n            params: {userId: userId, correspondingUserId: clickedUserId}\n        })\n    }\n    \n    return (\n        <>\n        <Chat/>\n        <ChatInput/>\n        </>\n    )\n}\n\nexport default ChatDisplay"],"mappings":";AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGzC,MAAMC,WAAW,GAAGC,IAAA,IAA2B;EAAA,IAA1B;IAAEC,IAAI;IAAEC;EAAY,CAAC,GAAAF,IAAA;EACtC,MAAMG,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,gCAAgC,EAAE;MAC/DC,MAAM,EAAE;QAACC,MAAM,EAAEA,MAAM;QAAEC,mBAAmB,EAAEC;MAAa;IAC/D,CAAC,CAAC;EACN,CAAC;EAED,oBACIb,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACAd,OAAA,CAACN,IAAI;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACPlB,OAAA,CAACL,SAAS;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA,gBACT;AAEX,CAAC;AAAAC,EAAA,GAbKhB,WAAW;AAejB,eAAeA,WAAW;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}