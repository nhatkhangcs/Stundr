{"ast":null,"code":"var _jsxFileName = \"/Users/khangnguyen/lab/tinder-clone/client/src/components/ChatInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInput = _ref => {\n  _s();\n  var _user, _clickedUser;\n  let {} = _ref;\n  const [textArea, setTextArea] = useState(\"\");\n  const userId = (_user = user) === null || _user === void 0 ? void 0 : _user.user_id;\n  const clickedUserId = (_clickedUser = clickedUser) === null || _clickedUser === void 0 ? void 0 : _clickedUser.user_id;\n  const addMessage = async () => {\n    const message = {\n      timestamp: new Date().toISOString(),\n      from_userId: userId,\n      to_userId: clickedUserId,\n      message: textArea\n    };\n    try {\n      await axios.post('http://localhost:8000/message', {\n        message\n      });\n      getUserMessages();\n      getClickedUsersMessages();\n      setTextArea(\"\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: textArea,\n      onChange: e => setTextArea(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"secondary-button\",\n      onClick: addMessage,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatInput, \"4eY01J2zdQ3jgJyvFt1ScRxGpfs=\");\n_c = ChatInput;\nexport default ChatInput;\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","ChatInput","_ref","_s","_user","_clickedUser","textArea","setTextArea","userId","user","user_id","clickedUserId","clickedUser","addMessage","message","timestamp","Date","toISOString","from_userId","to_userId","post","getUserMessages","getClickedUsersMessages","error","console","log","className","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/khangnguyen/lab/tinder-clone/client/src/components/ChatInput.js"],"sourcesContent":["import { useState} from 'react'\nimport axios from 'axios'\n\nconst ChatInput = ({ }) => {\n    const [textArea, setTextArea] = useState(\"\")\n    const userId = user?.user_id\n    const clickedUserId = clickedUser?.user_id\n\n    const addMessage = async () => {\n        const message = {\n            timestamp: new Date().toISOString(),\n            from_userId: userId,\n            to_userId: clickedUserId,\n            message: textArea\n        }\n\n        try {\n            await axios.post('http://localhost:8000/message', { message })\n            getUserMessages()\n            getClickedUsersMessages()\n            setTextArea(\"\")\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    return (\n        <div className=\"chat-input\">\n            <textarea value={textArea} onChange={(e) => setTextArea(e.target.value)}/>\n            <button className=\"secondary-button\" onClick={addMessage}>Submit</button>\n        </div>\n    )\n}\n\nexport default ChatInput"],"mappings":";;AAAA,SAASA,QAAQ,QAAO,OAAO;AAC/B,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGC,IAAA,IAAS;EAAAC,EAAA;EAAA,IAAAC,KAAA,EAAAC,YAAA;EAAA,IAAR,CAAE,CAAC,GAAAH,IAAA;EAClB,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMW,MAAM,IAAAJ,KAAA,GAAGK,IAAI,cAAAL,KAAA,uBAAJA,KAAA,CAAMM,OAAO;EAC5B,MAAMC,aAAa,IAAAN,YAAA,GAAGO,WAAW,cAAAP,YAAA,uBAAXA,YAAA,CAAaK,OAAO;EAE1C,MAAMG,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMC,OAAO,GAAG;MACZC,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;MACnCC,WAAW,EAAEV,MAAM;MACnBW,SAAS,EAAER,aAAa;MACxBG,OAAO,EAAER;IACb,CAAC;IAED,IAAI;MACA,MAAMR,KAAK,CAACsB,IAAI,CAAC,+BAA+B,EAAE;QAAEN;MAAQ,CAAC,CAAC;MAC9DO,eAAe,EAAE;MACjBC,uBAAuB,EAAE;MACzBf,WAAW,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;EAGD,oBACIvB,OAAA;IAAK0B,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvB3B,OAAA;MAAU4B,KAAK,EAAEtB,QAAS;MAACuB,QAAQ,EAAGC,CAAC,IAAKvB,WAAW,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAC1EnC,OAAA;MAAQ0B,SAAS,EAAC,kBAAkB;MAACU,OAAO,EAAEvB,UAAW;MAAAc,QAAA,EAAC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACvE;AAEd,CAAC;AAAAhC,EAAA,CA9BKF,SAAS;AAAAoC,EAAA,GAATpC,SAAS;AAgCf,eAAeA,SAAS;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}