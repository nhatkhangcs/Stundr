{"ast":null,"code":"var _jsxFileName = \"/Users/khangnguyen/lab/tinder-clone/client/src/pages/Dashboard.js\";\nimport TinderCard from 'react-tinder-card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  const characters = [{\n    name: 'Richard Hendricks',\n    url: './img/richard.jpg'\n  }, {\n    name: 'Erlich Bachman',\n    url: './img/erlich.jpg'\n  }, {\n    name: 'Monica Hall',\n    url: './img/monica.jpg'\n  }, {\n    name: 'Jared Dunn',\n    url: './img/jared.jpg'\n  }, {\n    name: 'Dinesh Chugtai',\n    url: './img/dinesh.jpg'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(ChatContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"swiper-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardContainer\",\n        children: characters.map(character => /*#__PURE__*/_jsxDEV(TinderCard, {\n          className: \"swipe\",\n          onSwipe: dir => swiped(dir, character.name),\n          onCardLeftScreen: () => outOfFrame(character.name),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundImage: 'url(' + character.url + ')'\n            },\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: character.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)\n        }, character.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["TinderCard","jsxDEV","_jsxDEV","Dashboard","characters","name","url","className","children","ChatContainer","fileName","_jsxFileName","lineNumber","columnNumber","map","character","onSwipe","dir","swiped","onCardLeftScreen","outOfFrame","style","backgroundImage","_c","$RefreshReg$"],"sources":["/Users/khangnguyen/lab/tinder-clone/client/src/pages/Dashboard.js"],"sourcesContent":["import TinderCard from 'react-tinder-card'\nconst Dashboard = () => {\n    const characters = [\n        {\n          name: 'Richard Hendricks',\n          url: './img/richard.jpg'\n        },\n        {\n            name: 'Erlich Bachman',\n            url: './img/erlich.jpg'\n        },\n        {\n        name: 'Monica Hall',\n        url: './img/monica.jpg'\n        },\n        {\n        name: 'Jared Dunn',\n        url: './img/jared.jpg'\n        },\n        {\n        name: 'Dinesh Chugtai',\n        url: './img/dinesh.jpg'\n        }\n      ]\n    return (\n        <div className=\"dashboard\">\n            <ChatContainer/>\n            <div className=\"swiper-container\">\n                <div className='cardContainer'>\n                    {characters.map((character) =>\n                    <TinderCard className='swipe' key={character.name} onSwipe={(dir) => swiped(dir, character.name)} onCardLeftScreen={() => outOfFrame(character.name)}>\n                        <div style={{ backgroundImage: 'url(' + character.url + ')' }} className='card'>\n                        <h3>{character.name}</h3>\n                        </div>\n                    </TinderCard>\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard"],"mappings":";AAAA,OAAOA,UAAU,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC1C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACpB,MAAMC,UAAU,GAAG,CACf;IACEC,IAAI,EAAE,mBAAmB;IACzBC,GAAG,EAAE;EACP,CAAC,EACD;IACID,IAAI,EAAE,gBAAgB;IACtBC,GAAG,EAAE;EACT,CAAC,EACD;IACAD,IAAI,EAAE,aAAa;IACnBC,GAAG,EAAE;EACL,CAAC,EACD;IACAD,IAAI,EAAE,YAAY;IAClBC,GAAG,EAAE;EACL,CAAC,EACD;IACAD,IAAI,EAAE,gBAAgB;IACtBC,GAAG,EAAE;EACL,CAAC,CACF;EACH,oBACIJ,OAAA;IAAKK,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBN,OAAA,CAACO,aAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAChBX,OAAA;MAAKK,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC7BN,OAAA;QAAKK,SAAS,EAAC,eAAe;QAAAC,QAAA,EACzBJ,UAAU,CAACU,GAAG,CAAEC,SAAS,iBAC1Bb,OAAA,CAACF,UAAU;UAACO,SAAS,EAAC,OAAO;UAAsBS,OAAO,EAAGC,GAAG,IAAKC,MAAM,CAACD,GAAG,EAAEF,SAAS,CAACV,IAAI,CAAE;UAACc,gBAAgB,EAAEA,CAAA,KAAMC,UAAU,CAACL,SAAS,CAACV,IAAI,CAAE;UAAAG,QAAA,eACjJN,OAAA;YAAKmB,KAAK,EAAE;cAAEC,eAAe,EAAE,MAAM,GAAGP,SAAS,CAACT,GAAG,GAAG;YAAI,CAAE;YAACC,SAAS,EAAC,MAAM;YAAAC,QAAA,eAC/EN,OAAA;cAAAM,QAAA,EAAKO,SAAS,CAACV;YAAI;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAM;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACnB,GAHyBE,SAAS,CAACV,IAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAIpC;MACZ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC;AAAAU,EAAA,GAvCKpB,SAAS;AAyCf,eAAeA,SAAS;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}