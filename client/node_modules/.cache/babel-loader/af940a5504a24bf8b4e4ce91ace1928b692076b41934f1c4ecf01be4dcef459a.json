{"ast":null,"code":"var _jsxFileName = \"/Users/khangnguyen/lab/tinder-clone/client/src/components/ChatDisplay.js\",\n  _s = $RefreshSig$();\nimport Chat from './Chat';\nimport ChatInput from './ChatInput';\nimport axios from 'axios';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatDisplay = _ref => {\n  _s();\n  let {\n    user,\n    clickedUser\n  } = _ref;\n  const [usersMessages, setUsersMessages] = useState(null);\n  const [clickedUsersMessages, setClickedUsersMessages] = useState(null);\n  const userId = user === null || user === void 0 ? void 0 : user.user_id;\n  const clickedUserId = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.user_id;\n  const getUsersMessages = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/messages', {\n        params: {\n          userId: userId,\n          correspondingUserId: clickedUserId\n        }\n      });\n      setUsersMessages(response.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const getClickedUsersMessages = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/messages', {\n        params: {\n          userId: clickedUserId,\n          correspondingUserId: userId\n        }\n      });\n      setClickedUsersMessages(response.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    getUsersMessages();\n    getClickedUsersMessages();\n  }, [usersMessages, clickedUsersMessages]);\n  const messages = [];\n  usersMessages === null || usersMessages === void 0 ? void 0 : usersMessages.forEach(message => {\n    const formattedMessage = {};\n    formattedMessage['name'] = user === null || user === void 0 ? void 0 : user.first_name;\n    formattedMessage['img'] = user === null || user === void 0 ? void 0 : user.url;\n    formattedMessage['message'] = message.message;\n    formattedMessage['timestamp'] = message.timestamp;\n    messages.push(formattedMessage);\n  });\n  clickedUsersMessages === null || clickedUsersMessages === void 0 ? void 0 : clickedUsersMessages.forEach(message => {\n    const formattedMessage = {};\n    formattedMessage['name'] = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.first_name;\n    formattedMessage['img'] = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.url;\n    formattedMessage['message'] = message.message;\n    formattedMessage['timestamp'] = message.timestamp;\n    messages.push(formattedMessage);\n  });\n  const descendingOrderMessages = messages === null || messages === void 0 ? void 0 : messages.sort((a, b) => a.timestamp.localeCompare(b.timestamp));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Chat, {\n      descendingOrderMessages: descendingOrderMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatDisplay, \"lPn/xB/W2UmaOZWNrmwpg6m2xhU=\");\n_c = ChatDisplay;\nexport default ChatDisplay;\nvar _c;\n$RefreshReg$(_c, \"ChatDisplay\");","map":{"version":3,"names":["Chat","ChatInput","axios","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatDisplay","_ref","_s","user","clickedUser","usersMessages","setUsersMessages","clickedUsersMessages","setClickedUsersMessages","userId","user_id","clickedUserId","getUsersMessages","response","get","params","correspondingUserId","data","err","console","log","getClickedUsersMessages","messages","forEach","message","formattedMessage","first_name","url","timestamp","push","descendingOrderMessages","sort","a","b","localeCompare","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/khangnguyen/lab/tinder-clone/client/src/components/ChatDisplay.js"],"sourcesContent":["import Chat from './Chat'\nimport ChatInput from './ChatInput'\nimport axios from 'axios'\nimport {useState, useEffect} from \"react\"\n\n\nconst ChatDisplay = ({ user, clickedUser }) => {\n    const [ usersMessages, setUsersMessages ] = useState(null)\n    const [ clickedUsersMessages, setClickedUsersMessages ] = useState(null)\n    const userId = user?.user_id\n    const clickedUserId = clickedUser?.user_id\n\n    const getUsersMessages = async () => {\n            try {\n            const response = await axios.get('http://localhost:8000/messages', {\n                params: {userId: userId, correspondingUserId: clickedUserId}\n            })\n            setUsersMessages(response.data)\n            } catch (err) {\n                console.log(err)\n            }\n        }\n    const getClickedUsersMessages = async () => {\n            try {\n            const response = await axios.get('http://localhost:8000/messages', {\n                params: {userId: clickedUserId, correspondingUserId: userId}\n            })\n            setClickedUsersMessages(response.data)\n            } catch (err) {\n                console.log(err)\n            }\n        }\n    \n    useEffect(() => {\n        getUsersMessages()\n        getClickedUsersMessages()\n    }, [usersMessages, clickedUsersMessages])\n\n    const messages = []\n    usersMessages?.forEach(message => {\n        const formattedMessage = {}\n        formattedMessage['name'] = user?.first_name\n        formattedMessage['img'] = user?.url\n        formattedMessage['message'] = message.message\n        formattedMessage['timestamp'] = message.timestamp\n        messages.push(formattedMessage)\n    });\n    clickedUsersMessages?.forEach(message => {\n        const formattedMessage = {}\n        formattedMessage['name'] = clickedUser?.first_name\n        formattedMessage['img'] = clickedUser?.url\n        formattedMessage['message'] = message.message\n        formattedMessage['timestamp'] = message.timestamp\n        messages.push(formattedMessage)\n    });\n\n    const descendingOrderMessages = messages?.sort((a,b) => a.timestamp.localeCompare(b.timestamp))\n\n    return (\n        <>\n        <Chat descendingOrderMessages = { descendingOrderMessages }/>\n        <ChatInput\n        />\n        </>\n    )\n}\n\nexport default ChatDisplay"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}